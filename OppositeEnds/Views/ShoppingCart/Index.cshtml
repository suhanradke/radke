@model IEnumerable<OppositeEnds.Models.ShoppingCartDetail>

@{
    ViewBag.Title = "Index";
}
@section Scripts
{
    <script src="@Url.Content("~/js/site.js")"></script>
}

<div class="bodyCartContent">
<div class="floral-index">

    <h1 class="cartTitle">Your Shopping Cart:</h1>
    <table class="table CartTable">
        <tr class="cartColumn">
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.GrandTotal)
            </th>
            <th class="cartHead">
                @Html.DisplayNameFor(model => model.RemainingItem)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="cartColumn">
                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>

                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.Total)
                </td> 
                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.GrandTotal)
                </td> 
                <td class="cartBody">
                    @Html.DisplayFor(modelItem => item.RemainingItem)
                </td> 
            </tr>
        }

    </table>
</div>

</div>